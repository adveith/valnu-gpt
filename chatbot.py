import pandas as pd  # Importing pandas library for data manipulation
import re  # Importing re module for regular expressions

# Read the Excel file into a pandas DataFrame
df = pd.read_excel('New.xlsx')

# Function to extract CWE ID from user input using regular expressions
def extract_cwe_id(user_input):
    """
    Extracts CWE ID from user input using regex.

    Args:
        user_input (str): User input containing CWE ID.

    Returns:
        str: CWE ID if found, otherwise None.
    """
    # Use regex to find CWE ID in the format CWE-XXX
    match = re.search(r'CWE-\d+', user_input)
    if match:
        return match.group(0)
    else:
        return None

# Function to get vulnerability details based on CWE ID
def get_vulnerability_details(cwe_id):
    """
    Retrieves vulnerability details from the dataframe based on CWE ID.

    Args:
        cwe_id (str): CWE ID to search for.

    Returns:
        str: Formatted vulnerability details if found, otherwise a message indicating no details found.
    """
    # Locate the row that matches the given CWE ID
    row = df.loc[df['CWE'] == cwe_id]
    
    if not row.empty:
        # Extract details from the row
        name = row['Name'].values[0]
        description = row['Description'].values[0]
        detection_methods = row['Detection_Methods'].values[0]
        potential_mitigations = row['Potential_Mitigations'].values[0]

        # Format the response
        response = (
            f"Name: {name}\n"
            f"Description:\n{description}\n"
            f"Detection Methods:\n{detection_methods}\n"
            f"Potential Mitigations:\n{potential_mitigations}"
        )
        return response
    else:
        return "No details found for this CWE ID."

# Function to generate a response based on user input
def chatbot_response(user_input):
    """
    Generates a response based on user input.

    Args:
        user_input (str): User input.

    Returns:
        str: Response generated by the chatbot.
    """
    if user_input.lower() == 'hello':
        return "Hello! How can I assist you today?"
    
    cwe_id = extract_cwe_id(user_input)  # Extract CWE ID from user input
    if cwe_id:
        details = get_vulnerability_details(cwe_id)  # Get vulnerability details based on CWE ID
        return details
    else:
        return "No CWE ID found in the input."

# Main loop for chatbot interaction
if __name__ == "__main__":
    while True:
        user_input = input("User: ")  # Prompt user for input
        if user_input.lower() == 'exit':  # Check if user wants to exit
            break
        response = chatbot_response(user_input)  # Get response from chatbot
        print("Bot:", response)  # Print response
